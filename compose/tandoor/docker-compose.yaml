version: "3"
services:
  db_recipes:
    container_name: tandoor_db
    restart: unless-stopped
    image: postgres:11-alpine
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    env_file:
      - ./.env
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  web_recipes:
    container_name: tandoor_app
    restart: unless-stopped
    image: vabene1111/recipes
    env_file:
      - ./.env
    volumes:
      - ./staticfiles:/opt/recipes/staticfiles
      - nginx_config:/opt/recipes/nginx/conf.d
      - ./mediafiles:/opt/recipes/mediafiles
    depends_on:
      - db_recipes
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  nginx_recipes:
    container_name: tandoor_nginx
    image: nginx:mainline-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    depends_on:
      - web_recipes
    volumes:
      - nginx_config:/etc/nginx/conf.d:ro
      - ./staticfiles:/static:ro
      - ./mediafiles:/media:ro
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tandoor.entrypoints=http"
      - "traefik.http.routers.tandoor.rule=Host(`tandoor.local.willkimble.net`)"
      - "traefik.http.middlewares.tandoor-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.tandoor.middlewares=tandoor-https-redirect"
      - "traefik.http.routers.tandoor-secure.entrypoints=https"
      - "traefik.http.routers.tandoor-secure.rule=Host(`tandoor.local.willkimble.net`)"
      - "traefik.http.routers.tandoor-secure.tls=true"
      - "traefik.http.routers.tandoor-secure.service=tandoor"
      - "traefik.http.services.tandoor.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.http.routers.tandoor-secure.middlewares=authelia@docker"

networks:
  default:
  proxy:
    external: true

volumes:
  nginx_config:
